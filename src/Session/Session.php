<?php

declare(strict_types=1);
/**
 * This file is part of Hyperf.
 *
 * @link     https://www.hyperf.io
 * @document https://hyperf.wiki
 * @contact  group@hyperf.io
 * @license  https://github.com/hyperf/hyperf/blob/master/LICENSE
 */
namespace Captainbi\Hyperf\Session;

use Hyperf\Contract\SessionInterface;
use Hyperf\Utils\Arr;
use Hyperf\Utils\Str;
use SessionHandlerInterface;

/**
 * This's a data class, please create an new instance for each requests.
 */
class Session extends \Hyperf\Session\Session
{
    /**
     * @var string
     */
    private $keyPrefix;

    public function __construct($name, SessionHandlerInterface $handler, $id = null, $keyPrefix = '')
    {
        $this->keyPrefix = $keyPrefix;
        parent::__construct($name, $handler, $id);
    }

    public function isValidId(string $id): bool
    {
        return is_string($id) && ctype_alnum($id);
    }

    public function has(string $name): bool
    {
        return parent::has($this->keyPrefix.$name); // TODO: Change the autogenerated stub
    }

    public function get(string $name, $default = null)
    {
        return parent::get($this->keyPrefix.$name, $default); // TODO: Change the autogenerated stub
    }

    public function set(string $name, $value): void
    {
        parent::set($this->keyPrefix.$name, $value); // TODO: Change the autogenerated stub
    }

    public function replace(array $attributes): void
    {
        foreach ($attributes as $name => $value) {
            data_set($this->attributes, $this->keyPrefix.$name, $value);
        }
    }

    public function remove(string $name)
    {
        return parent::remove($this->keyPrefix.$name); // TODO: Change the autogenerated stub
    }

}
